<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace: sql태그 id를 그룹화 해주는 속성 id가 다른 파일에 중복될 수 있다. 파일의 namespace로 
	구분 mapper.xml 경로와 동일해야 함 -->

<mapper namespace="com.smhrd.db.courseMapper">

<select id="TourImage" parameterType = "int" resultType = "TourCourseVO">
	select * from tour_course_info where bc_idx= #{matchignTrip}
</select>

<update id="UpdateMyTour" parameterType = "TourCourseVO">
	update my_tour_course_info set mt_select = #{mt_select}, mt_img=#{mt_img} where mt_idx=#{mt_idx}
</update>

<select id="searchResult" parameterType="String" resultType="PoiVO">
SELECT POI_idx,
       POI_name,
       POI_addr,  
       POI_desc,
       POI_lat,
       POI_lng,
       POI_tag,
       POI_photo
FROM (SELECT POI_IDX AS POI_idx,
           POI_NAME AS POI_name,
           poi_tag AS POI_tag,
           POI_ADDR AS POI_addr,
           POI_DESC AS POI_desc,
           POI_LAT AS POI_lat,
           POI_LNG AS POI_lng,
           POI_PHOTO AS POI_photo,
           (REGEXP_COUNT(POI_NAME, #{search}) * 3 + REGEXP_COUNT(poi_tag, #{search}) * 2 + REGEXP_COUNT(poi_desc, #{search})) AS count_sum
    FROM poi_info

    UNION ALL

    SELECT HOTEL_IDX AS POI_idx,
           HOTEL_NAME AS POI_name,
           hotel_tag AS POI_tag,
           HOTEL_ADDR AS POI_addr,
           HOTEL_COMMENT AS POI_desc,
           LAT AS POI_lat,
           LNG AS POI_lng,
           HOTEL_PHOTO AS POI_photo,
           (REGEXP_COUNT(HOTEL_NAME, #{search}) * 3 + REGEXP_COUNT(hotel_tag, #{search}) * 2 + REGEXP_COUNT(HOTEL_COMMENT, #{search})) AS count_sum
    FROM hotel_info

    UNION ALL

    SELECT RESTAU_IDX AS POI_idx,
           RESTAU_NAME AS POI_name,
           RESTAU_TAG AS POI_tag,
           RESTAU_ADDR AS POI_addr,
           RESTAU_DESC AS POI_desc,
           LAT AS POI_lat,
           LNG AS POI_lng,
           RESTAU_PHOTO1 AS POI_photo,
           (REGEXP_COUNT(RESTAU_NAME, #{search}) * 3 + REGEXP_COUNT(RESTAU_TAG, #{search}) * 2 + REGEXP_COUNT(RESTAU_desc, #{search})) AS count_sum
    FROM RESTAURANT_INFO

    UNION ALL

    SELECT SHOP_IDX AS POI_idx,
           SHOP_NAME AS POI_name,
           SHOP_TAG AS POI_tag,
           SHOP_ADDR AS POI_addr,
           SHOP_DESC AS POI_desc,
           LAT AS POI_lat,
           LNG AS POI_lng,
           SHOP_PHOTO AS POI_photo,
           (REGEXP_COUNT(SHOP_NAME, #{search}) * 3 + REGEXP_COUNT(SHOP_desc, #{search}) * 2 + REGEXP_COUNT(SHOP_TAG, #{search})) AS count_sum
    FROM shop_info
    ORDER BY count_sum DESC
)
WHERE ROWNUM &lt;= 5

</select>
<select id="sampleTripDetail" parameterType="java.util.List" resultType="CourseBriefNDetailVO">
    SELECT bc_name, bc_period, bc_theme, bc_img, day, bc_course
    FROM tour_course_info a
    inner JOIN daily_schedule_info b ON a.bc_idx = b.bc_idx
    WHERE a.bc_idx IN
    <foreach item="item" collection="list" open="(" separator="," close=")">
        #{item}
    </foreach>
</select>

<select id="sampleTrips" resultType ="TourCourseVO">
SELECT * FROM (
    SELECT * FROM tour_course_info WHERE bc_period = 3 ORDER BY DBMS_RANDOM.RANDOM()
) WHERE ROWNUM &lt;= 1
UNION ALL
SELECT * FROM (
    SELECT * FROM tour_course_info WHERE bc_period = 4 ORDER BY DBMS_RANDOM.RANDOM()
) WHERE ROWNUM &lt;= 1
UNION ALL
SELECT * FROM (
    SELECT * FROM tour_course_info WHERE bc_period = 5 ORDER BY DBMS_RANDOM.RANDOM()
) WHERE ROWNUM &lt;= 1
</select>
<select id="currentTrip" parameterType = "int" resultType = "MyTripsVO">
select * from my_tour_course_info where mt_idx = #{mt_idx}
</select>

<update id="myCourseUpdate" parameterType="myCourseVO">
update my_daily_schedule_info set mt_course = #{mt_course} where mt_idx = #{mt_idx} and DAY_SCHE = #{day_sche}
</update>
<select id="loadSchedule" parameterType = "int" resultType = "myCourseVO">
	select * from my_daily_schedule_info where mt_idx = #{mt_idx} order by day_sche

</select>

<insert id="myCourseDetail" parameterType = "myCourseVO" >
insert into MY_DAILY_SCHEDULE_INFO
values (MY_DAILY_SCHEDULE_INFO_SEQ.nextval, #{mt_idx}, #{day_sche}, #{mt_course}, #{user_id})
		<selectKey keyProperty="d_sche_idx" resultType="int" order="AFTER">
       SELECT MY_DAILY_SCHEDULE_INFO_SEQ.CURRVAL FROM DUAL
 		</selectKey>

</insert>
	<select id="courseDetail" parameterType="int" resultType="autoCourseVO">
		select a.bc_idx, a.bc_period, b.day, b.bc_course
		from TOUR_COURSE_INFO a
		join DAILY_SCHEDULE_INFO b
		on a.bc_idx = b.bc_idx
		where a.bc_idx=#{matchingTrip}
	</select>
	<select id="POIs" parameterType="int" resultType="autoCourseVO">
		select
		d_sche_idx, bc_idx, bc_course from DAILY_SCHEDULE_INFO where bc_idx =
		#{bc idx}
	</select>

	<select id="PotentialMatches" parameterType="int"
		resultType="TourCourseVO">
		select * from tour_course_info where bc_period = #{period}
	</select>

	<select id="MyTrips" parameterType="String" resultType="MyTripsVO">
		<!-- MyTrips MyTourInfo 테이블에서 해당 유저의 여행 리스트 가져오기 -->
		select * from my_tour_course_info where user_id = #{user_id}

	</select>

	<insert id="createMySchedule" parameterType="createScheduleVO">
		insert into
		MY_TOUR_COURSE_INFO (mt_idx, mt_name, mt_preference, user_id,
		mt_st_dt, mt_ed_dt)
		values
		(MY_TOUR_COURSE_INFO_SEQ.nextval, #{mt_name},
		#{mt_preference},
		#{user_id},
		#{mt_st_dt}, #{mt_ed_dt})
		<selectKey keyProperty="mt_idx" resultType="int" order="AFTER">
       SELECT MY_TOUR_COURSE_INFO_SEQ.CURRVAL FROM DUAL
 		</selectKey>
	</insert>
	<insert id="createMyDaily" parameterType="createScheduleVO">
		insert into testMyDaily
		values
		(#{d_sche_idx}, #{mt_idx}, #{day}, #{mt_course})
	</insert>
	<select id="PoiTags2" parameterType="int" resultType="PoiVO">
		SELECT
		poi_idx, poi_name, poi_tag
		FROM poi_info
		WHERE poi_idx = #{poi_idx}
		union
		SELECT hotel_idx, hotel_name, hotel_tag
		FROM
		hotel_info
		WHERE hotel_idx = #{poi_idx}
		union
		SELECT RESTAU_IDX, RESTAU_NAME, RESTAU_TAG
		FROM RESTAURANT_INFO
		WHERE RESTAU_IDX = #{poi_idx}
		union
		SELECT shop_idx, shop_name, shop_tag
		FROM
		shop_info
		WHERE shop_idx = #{poi_idx}
	</select>
	<select id="relatedTags" parameterType="String"
		resultType="tagInfoVO">
		select cat_name, tag_name from tag_info where
		cat_name=#{cat_name}
	</select>

	<select id="PoiTags" parameterType="java.util.List"
		resultType="PoiVO">
		SELECT poi_idx, poi_name, poi_tag
		FROM poi_info
		WHERE poi_idx in (
		<foreach collection="java.util.List" item="item" separator=",">
			#{item}
		</foreach>
		)
	</select>
	<select id="dailyCourseList" parameterType="int"
		resultType="autoCourseVO">
		select * from test_daily where bc_idx=#{bc_idx}
	</select>
	<select id="myDailyCourseList" parameterType="int"
		resultType="createScheduleVO">
		select * from testMyDaily where mt_idx=#{mt_idx} order by
		day_sche
	</select>

	<select id="myCoursePOI" parameterType="int" resultType="PoiVO">
		SELECT		
		POI_IDX,
		POI_NAME,
		POI_ADDR,
		POI_DESC,
		POI_LAT,
		POI_LNG,
		POI_PHOTO
		FROM poi_info
		WHERE poi_idx = #{poi_idx}
		union
		SELECT
		HOTEL_IDX,
		HOTEL_NAME,
		HOTEL_ADDR,
		HOTEL_COMMENT,
		LAT,
		LNG,
		HOTEL_PHOTO
		FROM
		hotel_info
		WHERE hotel_idx = #{poi_idx}
		union
		SELECT
		RESTAU_IDX,
		RESTAU_NAME,
		RESTAU_ADDR,
		RESTAU_DESC,
		LAT,
		LNG,
		RESTAU_PHOTO1
		FROM RESTAURANT_INFO
		WHERE RESTAU_IDX = #{poi_idx}
		union
		SELECT
		SHOP_IDX,
		SHOP_NAME,
		SHOP_ADDR,
		SHOP_DESC,
		LAT,
		LNG,
		SHOP_PHOTO
		FROM
		shop_info
		WHERE shop_idx = #{poi_idx}
	</select>
<!-- 	<update id="updateSchedule" parameterType="HashMap">
		update my_course_detail
		set
		<foreach collection="HashMap" separator = ",">
		#{key} = #{value}
		</foreach>
	</update> -->

</mapper>