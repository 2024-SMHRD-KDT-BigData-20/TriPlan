<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace: sql태그 id를 그룹화 해주는 속성 id가 다른 파일에 중복될 수 있다. 파일의 namespace로 
	구분 mapper.xml 경로와 동일해야 함 -->

<mapper namespace="com.smhrd.db.courseMapper">
<select id="searchResult" parameterType="String" resultType="PoiVO">
SELECT
    POI_IDX as idx,
    POI_NAME as place,
    REGEXP_COUNT(POI_NAME, #{search}) AS name_count,
    poi_tag as tag,
    REGEXP_COUNT(poi_tag, #{search}) AS tag_count,
    POI_ADDR as addr,
    POI_DESC as description,
    REGEXP_COUNT(poi_desc, #{search}) AS desc_count,
    POI_LAT as lat,
    POI_LNG as lng,
    POI_PHOTO as photo,
    (REGEXP_COUNT(POI_NAME, #{search}) + REGEXP_COUNT(poi_tag, #{search})) AS count_sum
FROM poi_info
UNION ALL
SELECT
    HOTEL_IDX as idx,
    HOTEL_NAME as place,
    REGEXP_COUNT(HOTEL_NAME, #{search}) AS name_count,
    hotel_tag as tag,
    REGEXP_COUNT(HOTEL_tag, #{search}) AS tag_count,
    HOTEL_ADDR as addr,
    HOTEL_COMMENT as description,
    REGEXP_COUNT(HOTEL_comment, #{search}) AS desc_count,
    LAT as lat,
    LNG as lng,
    HOTEL_PHOTO as photo,
    (REGEXP_COUNT(hotel_NAME, #{search}) * 3 + REGEXP_COUNT(hotel_tag, #{search}) * 2 + REGEXP_COUNT(hotel_desc, #{search})) AS count_sum
FROM
    hotel_info
UNION ALL
SELECT
    RESTAU_IDX as idx,
    RESTAU_NAME as place,
    REGEXP_COUNT(restau_NAME, #{search}) AS name_count,
    RESTAU_TAG as tag,
    REGEXP_COUNT(RESTAU_tag, #{search}) AS tag_count,
    RESTAU_ADDR as addr,
    RESTAU_DESC as description,
    REGEXP_COUNT(RESTAU_DESC, #{search}) AS desc_count,
    LAT as lat,
    LNG as lng,
    RESTAU_PHOTO1 as photo,
    (REGEXP_COUNT(restau_NAME, #{search}) * 3 + REGEXP_COUNT(RESTAU_tag, #{search}) * 2 + REGEXP_COUNT(RESTAU_DESC, #{search})) AS count_sum
FROM
    RESTAURANT_INFO
UNION ALL
SELECT
    SHOP_IDX as idx,
    SHOP_NAME as place,
    REGEXP_COUNT(SHOP_NAME, #{search}) AS name_count,
    SHOP_TAG as tag,
    REGEXP_COUNT(SHOP_TAG, #{search}) AS tag_count,
    SHOP_ADDR as addr,
    SHOP_DESC as description,
    REGEXP_COUNT(SHOP_DESC, #{search}) AS desc_count,
    LAT as lat,
    LNG as lng,
    SHOP_PHOTO as photo,
    (REGEXP_COUNT(SHOP_NAME, #{search}) * 3 + REGEXP_COUNT(SHOP_TAG, #{search}) * 2 + REGEXP_COUNT(SHOP_DESC, #{search})) AS count_sum
FROM
    shop_info
ORDER BY count_sum DESC;


SELECT POI_IDX AS idx,
       POI_NAME AS name,
       poi_tag AS tag,
       POI_ADDR AS addr,
       POI_DESC AS desc1,
       POI_LAT AS lat,
       POI_LNG AS lng,
       POI_PHOTO AS photo,
       (REGEXP_COUNT(POI_NAME, #{search})*3 + REGEXP_COUNT(poi_tag, #{search})*2+ REGEXP_COUNT(poi_desc, #{search})) AS count_sum
FROM poi_info

UNION

SELECT HOTEL_IDX,
       HOTEL_NAME,
       hotel_tag,
       HOTEL_ADDR,
       HOTEL_COMMENT,
       LAT,
       LNG,
       HOTEL_PHOTO,
       (REGEXP_COUNT(HOTEL_NAME, #{search})*3 + REGEXP_COUNT(hotel_tag, #{search})*2 + REGEXP_COUNT(HOTEL_COMMENT, #{search})) AS count_sum
FROM hotel_info

UNION all

SELECT RESTAU_IDX,
       RESTAU_NAME,
       RESTAU_TAG,
       RESTAU_ADDR,
       RESTAU_DESC,
       LAT,
       LNG,
       RESTAU_PHOTO1,
       (REGEXP_COUNT(RESTAU_NAME, #{search})*3 + REGEXP_COUNT(RESTAU_TAG, #{search})*2+ REGEXP_COUNT(RESTAU_desc, #{search})) AS count_sum
FROM RESTAURANT_INFO

UNION

SELECT SHOP_IDX,
       SHOP_NAME,
       SHOP_TAG,
       SHOP_ADDR,
       SHOP_DESC,
       LAT,
       LNG,
       SHOP_PHOTO,
       (REGEXP_COUNT(SHOP_NAME, #{search})*3 + REGEXP_COUNT(SHOP_TAG, #{search})*2+ REGEXP_COUNT(SHOP_TAG, #{search})) AS count_sum
FROM shop_info

ORDER BY count_sum DESC;


</select>

<select id="currentTrip" parameterType = "int" resultType = "MyTripsVO">
select * from my_tour_course_info where mt_idx = #{mt_idx}
</select>

<update id="myCourseUpdate" parameterType="myCourseVO">
update my_daily_schedule_info set mt_course = #{mt_course} where mt_idx = #{mt_idx} and DAY_SCHE = #{day_sche}
</update>
<select id="loadSchedule" parameterType = "int" resultType = "myCourseVO">
select * from my_daily_schedule_info where mt_idx = #{mt_idx}

</select>

<insert id="myCourseDetail" parameterType = "myCourseVO" >
insert into MY_DAILY_SCHEDULE_INFO
values (MY_DAILY_SCHEDULE_INFO_SEQ.nextval, #{mt_idx}, #{day_sche}, #{mt_course}, #{user_id})
		<selectKey keyProperty="d_sche_idx" resultType="int" order="AFTER">
       SELECT MY_DAILY_SCHEDULE_INFO_SEQ.CURRVAL FROM DUAL
 		</selectKey>

</insert>
	<select id="courseDetail" parameterType="int" resultType="autoCourseVO">
		select a.bc_idx, a.bc_period, b.day, b.bc_course
		from TOUR_COURSE_INFO a
		join DAILY_SCHEDULE_INFO b
		on a.bc_idx = b.bc_idx
		where a.bc_idx=#{matchingTrip}
	</select>
	<select id="POIs" parameterType="int" resultType="autoCourseVO">
		select
		d_sche_idx, bc_idx, bc_course from DAILY_SCHEDULE_INFO where bc_idx =
		#{bc idx}
	</select>

	<select id="PotentialMatches" parameterType="int"
		resultType="TourCourseVO">
		select * from tour_course_info where bc_period = #{period}
	</select>

	<select id="MyTrips" parameterType="String" resultType="MyTripsVO">
		<!-- MyTrips MyTourInfo 테이블에서 해당 유저의 여행 리스트 가져오기 -->
		select * from my_tour_course_info where user_id = #{user_id}

	</select>

	<insert id="createMySchedule" parameterType="createScheduleVO">
		insert into
		MY_TOUR_COURSE_INFO (mt_idx, mt_name, mt_preference, user_id,
		mt_st_dt, mt_ed_dt)
		values
		(MY_TOUR_COURSE_INFO_SEQ.nextval, #{mt_name},
		#{mt_preference},
		#{user_id},
		#{mt_st_dt}, #{mt_ed_dt})
		<selectKey keyProperty="mt_idx" resultType="int" order="AFTER">
       SELECT MY_TOUR_COURSE_INFO_SEQ.CURRVAL FROM DUAL
 		</selectKey>
	</insert>
	<insert id="createMyDaily" parameterType="createScheduleVO">
		insert into testMyDaily
		values
		(#{d_sche_idx}, #{mt_idx}, #{day}, #{mt_course})
	</insert>
	<select id="PoiTags2" parameterType="int" resultType="PoiVO">
		SELECT
		poi_idx, poi_name, poi_tag
		FROM poi_info
		WHERE poi_idx = #{poi_idx}
		union
		SELECT hotel_idx, hotel_name, hotel_tag
		FROM
		hotel_info
		WHERE hotel_idx = #{poi_idx}
		union
		SELECT RESTAU_IDX, RESTAU_NAME, RESTAU_TAG
		FROM RESTAURANT_INFO
		WHERE RESTAU_IDX = #{poi_idx}
		union
		SELECT shop_idx, shop_name, shop_tag
		FROM
		shop_info
		WHERE shop_idx = #{poi_idx}
	</select>
	<select id="relatedTags" parameterType="String"
		resultType="tagInfoVO">
		select cat_name, tag_name from tag_info where
		cat_name=#{cat_name}
	</select>

	<select id="PoiTags" parameterType="java.util.List"
		resultType="PoiVO">
		SELECT poi_idx, poi_name, poi_tag
		FROM poi_info
		WHERE poi_idx in (
		<foreach collection="java.util.List" item="item" separator=",">
			#{item}
		</foreach>
		)
	</select>
	<select id="dailyCourseList" parameterType="int"
		resultType="autoCourseVO">
		select * from test_daily where bc_idx=#{bc_idx}
	</select>
	<select id="myDailyCourseList" parameterType="int"
		resultType="createScheduleVO">
		select * from testMyDaily where mt_idx=#{mt_idx} order by
		day_sche
	</select>

	<select id="myCoursePOI" parameterType="int" resultType="PoiVO">
		SELECT		
		POI_IDX,
		POI_NAME,
		POI_ADDR,
		POI_DESC,
		POI_LAT,
		POI_LNG,
		POI_PHOTO
		FROM poi_info
		WHERE poi_idx = #{poi_idx}
		union
		SELECT
		HOTEL_IDX,
		HOTEL_NAME,
		HOTEL_ADDR,
		HOTEL_COMMENT,
		LAT,
		LNG,
		HOTEL_PHOTO
		FROM
		hotel_info
		WHERE hotel_idx = #{poi_idx}
		union
		SELECT
		RESTAU_IDX,
		RESTAU_NAME,
		RESTAU_ADDR,
		RESTAU_DESC,
		LAT,
		LNG,
		RESTAU_PHOTO1
		FROM RESTAURANT_INFO
		WHERE RESTAU_IDX = #{poi_idx}
		union
		SELECT
		SHOP_IDX,
		SHOP_NAME,
		SHOP_ADDR,
		SHOP_DESC,
		LAT,
		LNG,
		SHOP_PHOTO
		FROM
		shop_info
		WHERE shop_idx = #{poi_idx}
	</select>


</mapper>